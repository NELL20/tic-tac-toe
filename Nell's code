import java.util.Scanner;

public class TicTacToe {
    private static final int BOARD_SIZE = 3;
    private static char[][] board = new char[BOARD_SIZE][BOARD_SIZE];
    private static char currentPlayer = 'X';
    
    public static void main(String[] args) {
        initializeBoard();
        displayBoard();
        while (!isGameOver()) {
            playTurn();
            displayBoard();
            switchPlayer();
        }
        displayResult();
    }
    
    private static void initializeBoard() {
        for (int row = 0; row < BOARD_SIZE; row++) {
            for (int col = 0; col < BOARD_SIZE; col++) {
                board[row][col] = '-';
            }
        }
    }
    
    private static void displayBoard() {
        for (int row = 0; row < BOARD_SIZE; row++) {
            for (int col = 0; col < BOARD_SIZE; col++) {
                System.out.print(board[row][col] + " ");
            }
            System.out.println();
        }
    }
    
    private static void playTurn() {
        Scanner scanner = new Scanner(System.in);
        int row, col;
        do {
            System.out.print("Player " + currentPlayer + ", enter row (1-" + BOARD_SIZE + "): ");
            row = scanner.nextInt() - 1;
            System.out.print("Player " + currentPlayer + ", enter col (1-" + BOARD_SIZE + "): ");
            col = scanner.nextInt() - 1;
        } while (!isValidMove(row, col));
        board[row][col] = currentPlayer;
    }
    
    private static boolean isValidMove(int row, int col) {
        if (row < 0 || row >= BOARD_SIZE || col < 0 || col >= BOARD_SIZE) {
            return false;
        }
        if (board[row][col] != '-') {
            return false;
        }
        return true;
    }
    
    private static boolean isGameOver() {
        if (hasWon('X') || hasWon('O') || isDraw()) {
            return true;
        }
        return false;
    }
    
    private static boolean hasWon(char player) {
        for (int row = 0; row < BOARD_SIZE; row++) {
            if (board[row][0] == player && board[row][1] == player && board[row][2] == player) {
                return true;
            }
        }
        for (int col = 0; col < BOARD_SIZE; col++) {
            if (board[0][col] == player && board[1][col] == player && board[2][col] == player) {
                return true;
            }
        }
        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
            return true;
        }
        if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
            return true;
        }
        return false;
    }
    
    private static boolean isDraw() {
        for (int row = 0; row < BOARD_SIZE; row++) {
            for (int col = 0; col < BOARD_SIZE; col++) {
                if (board[row][col] == '-') {
                    return false;
                }
            }
        }
        return true;
    }
    
    private static void displayResult() {
        if (hasWon('X')) {
            System.out.println("Player X wins!");
        } else if (hasWon
